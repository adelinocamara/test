<%
  const LOCAL_PAGE = Object.freeze({
    title: LOCAL_STRINGS.personal_information,
    description: {
      en: '',
      es: ''
    },
    keywords: {
      en: '',
      es: ''
    },
    robots: 'index, follow',
    canonical: '',
    og_url: '',
    og_site_name: {
      en: '',
      es: ''
    },
    og_image: '',
    twitter_card: {
      en: '',
      es: ''
    },
    stylesheets: [
      "/profile/res/src/assets/css/light/users/user-profile.css"
    ]
  })
%>
<%- include('./header-page-logged.ejs', {
  LOCAL_PAGE
}) -%>
<!--  BEGIN *** CONTENT ***  -->
<form id="frmMain" enctype="multipart/form-data">
  <input id="hid_user_name" name="hid_user_name" type="hidden" value="<%=req.session.active_user.user_name%>" />
  <input id="hid_type_key" name="hid_type_key" type="hidden" value="" />
  <input id="hid_id_user_married_who" name="hid_id_user_married_who" type="hidden" value="<%=req.session.active_user.id_user_married_who%>" />
  <div id="flStackForm" class="col-lg-12 layout-spacing layout-top-spacing">
    <div class="statbox widget box box-shadow">
      <div class="widget-header">
          <div class="row">
              <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                  <h4><%=LOCAL_STRINGS.personal_information[language]%></h4>
              </div>
          </div>
      </div>
      <div class="widget-content widget-content-area">
        <div class="row mb-3">
          <label for="txtFirstName" class="col-sm-2 col-form-label"><%=LOCAL_STRINGS.first_name[language]%></label>
          <div class="col-md-3">
            <input id="txtFirstName" name="txtFirstName" type="text" class="form-control" value="<%=req.session.active_user.first_name%>">
            <div id="msgFirstName"></div>
          </div>
        </div>
        <div class="row mb-3">
          <label for="txtLastName" class="col-sm-2 col-form-label"><%=LOCAL_STRINGS.last_name[language]%></label>
          <div class="col-md-3">
            <input id="txtLastName" name="txtLastName" type="text" class="form-control" value="<%=req.session.active_user.last_name%>">
            <div id="msgLastName"></div>
          </div>
        </div>
        <div class="row mb-3">
          <label for="txtUserName" class="col-sm-2 col-form-label"><%=LOCAL_STRINGS.user_name[req.session.language]%><i id="icoUserName" class="fa fa-spinner fa-spin d-none"></i></label>
          <div class="col-md-3">
            <input id="txtUserName" name="txtUserName" type="text" class="form-control" value="<%=req.session.active_user.user_name%>">
            <div id="msgUserName"></div>
            <small class="form-text text-muted">
              <span class="badge badge-info mb-2 me-4">
              <i class="fa-solid fa-globe"></i> https://www.myministries.app/user/<span id="spanShowUserName"><%=req.session.active_user.user_name%></span></span>
            </small>
          </div>
        </div>
        <fieldset class="row mb-3">
          <label class="col-sm-2 col-form-label"><%=LOCAL_STRINGS.gender[language]%></label>
          <div class="col-sm-10">
            <div class="form-check">
              <input id="radFemale" class="form-check-input" type="radio" name="grpGender" value="female" <%if (req.session.active_user.gender == 'female') {%>checked<%}%>>
              <label class="form-check-label" for="radFemale">
                <%=LOCAL_STRINGS.female[language]%>
              </label>
            </div>
            <div class="form-check">
              <input id="radMale" class="form-check-input" type="radio" name="grpGender" value="male" <%if (req.session.active_user.gender == 'male') {%>checked<%}%>>
              <label class="form-check-label" for="radMale">
                <%=LOCAL_STRINGS.male[language]%>
              </label>
            </div>
            <div id="msgGender"></div>
          </div>
        </fieldset>
        <div class="row mb-3">
          <label for="txtDateOfBirth" class="col-sm-2 col-form-label"><%=LOCAL_STRINGS.date_of_birth[language]%></label>
          <div class="col-md-2">
            <input id="txtDateOfBirth" name="txtDateOfBirth" type="text" class="form-control" value="<%=req.session.active_user.birthdate_formatted%>">
            <div id="msgDateOfBirth"></div>
            <small class="form-text text-muted"><%=LOCAL_STRINGS.date_of_format_info[language]%> <%=req.session.date_info%></small>
          </div>
        </div>
        <div class="row mb-3">
          <label for="selNationality" class="col-sm-2 col-form-label"><%=LOCAL_STRINGS.nationality[language]%></label>
          <div class="col-sm-10">
              <div class="input-group mb-3">
                <span class="input-group-text" >
                  <img id="imgCountryFlag" src="/profile/res/src/assets/img/flag/flag.svg" width="18px" title="flag" alt="flag">
                </span>
                <select id="selNationality" name="selNationality" class="custom-select">
                  <option value="-1,flag.svg">-- <%=LOCAL_STRINGS.select_nationality[language]%> --</option>
                  <%
                    const nationality_language = `nationality_${language}`;
                    for (var i = 0; i < countries.length; i++) {
                  %>
                      <option value="<%=countries[i].id_country%>,<%=countries[i].img_flag%>"
                      <%
                            if (countries[i].id_country == req.session.active_user.id_nationality) {
                      %>
                              selected
                      <%
                            }
                      %>
                      ><%=countries[i][nationality_language]%></option>
                  <%
                    }
                  %>
                </select>
                <div id="msgNationality"></div>
            </div>
          </div>
        </div>
        <div class="row mb-3">
          <label class="col-sm-2 col-form-label"><%=LOCAL_STRINGS.marital_status[language]%></label>
          <div class="col-sm-10">
            <div class="form-check form-check-success form-check-inline">
              <input class="form-check-input" type="radio" name="radioMaritalStatus" id="radioSingle" value="single" <%if (req.session.active_user.marital_status == 'single') {%> checked <%}%> >
              <label id="lblSingle" class="form-check-label" for="form-check-radio-success">
                <%=LOCAL_STRINGS.single[language]%>
              </label>
            </div>
            <div class="form-check form-check-danger form-check-inline">
              <input class="form-check-input" type="radio" name="radioMaritalStatus" id="radioMarried" value="married" <%if (req.session.active_user.marital_status == 'married') {%> checked <%}%>>
              <label id="lblMarried" class="form-check-label" for="form-check-radio-danger">
                <%=LOCAL_STRINGS.married[language]%>
              </label>
            </div>
            <div class="form-check form-check-dark form-check-inline">
              <input class="form-check-input" type="radio" name="radioMaritalStatus" id="radioWidowed" value="widowed" <%if (req.session.active_user.marital_status == 'widowed') {%> checked <%}%>>
              <label id="lblWidowed" class="form-check-label" for="form-check-radio-dark">
                <%=LOCAL_STRINGS.widowed[language]%>
              </label>
            </div>
            <div class="form-check form-check-secondary form-check-inline">
              <input class="form-check-input" type="radio" name="radioMaritalStatus" id="radioSeparated" value="separated" <%if (req.session.active_user.marital_status == 'separated') {%> checked <%}%>>
              <label id="lblSeparated" class="form-check-label" for="form-check-radio-secondary">
                <%=LOCAL_STRINGS.separated[language]%>
              </label>
            </div>
            <div class="form-check form-check-warning form-check-inline">
              <input class="form-check-input" type="radio" name="radioMaritalStatus" id="radioDivorced" value="divorced" <%if (req.session.active_user.marital_status == 'divorced') {%> checked <%}%>>
              <label id="lblDivorced" class="form-check-label" for="form-check-radio-warning">
                <%=LOCAL_STRINGS.divorced[language]%>
              </label>
            </div>
            <div id="msgRadioMaritalStatus"></div>
          </div>
        </div>
        <div id="div_married" class="d-none">
          <div class="row mb-3">
            <label for="txtDateMarried" class="col-sm-2 col-form-label"><%=LOCAL_STRINGS.date_of_married[language]%></label>
            <div class="col-md-2">
              <input id="txtDateMarried" name="txtDateMarried" type="text" class="form-control" value="<%=req.session.active_user.date_married_formatted%>">
              <div id="msgDateMarried"></div>
              <small class="form-text text-muted"><%=LOCAL_STRINGS.date_of_format_info[language]%> <%=req.session.date_info%></small>
            </div>
          </div>
        </div>
        <div class="row mb-3">
          <label class="col-sm-2 col-form-label">&nbsp;</label>
          <div class="col-sm-10">
            <button id="btnUpdate" type="button" name="btnUpdate" class="btn btn-success mb-2 me-4">
              <span>
                <i id="icoUpdate" name="icoUpdate" class="fa fa-spinner fa-spin d-none"></i> <%=LOCAL_STRINGS.update[language]%>
              </span>
            </button>
            <button id="btnCancel" name="btnCancel" type="button" class="btn btn-warning mb-2 me-4">
              <i id="icoCancel" class="fa fa-spinner fa-spin d-none"></i> <%=LOCAL_STRINGS.cancel[language]%>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</form>
<!--  END *** CONTENT ***  -->
<%- include('./footer-page-logged.ejs'); -%>
<!--  BEGIN *** SCRIPTS ***  -->
<script>
  const txtDateMarried = new SLInput('txtDateMarried', {
    messages: {
      msgDiv: 'msgDateMarried',
      show: showMsg,
      hide: hideMsg
    },
    required: '<%=LOCAL_STRINGS.required_date_of_married[language]%>',
    date: {
      error: '<%=LOCAL_STRINGS.date_of_married_error[language]%>',
      format: '<%=req.session.date_format%>',
      separator: '<%=req.session.date_separator%>'
    },
    less_to_today: {
      error: '<%=LOCAL_STRINGS.date_of_married_must_be_less_to_today[language]%>'
    }
  });
  const radioMaritalStatus = new SLRadioGroup('radioMaritalStatus', {
    messages: {
      msgDiv: 'msgRadioMaritalStatus',
      show: showMsg,
      hide: hideMsg
    },
    required: '<%=LOCAL_STRINGS.required_marital_status[language]%>'
  });
  const txtFirstName = new SLInput('txtFirstName', {
    messages: {
      msgDiv: 'msgFirstName',
      show: showMsg,
      hide: hideMsg
    },
    required: '<%=LOCAL_STRINGS.required_first_name[language]%>',
    min_characters: {
      error: '<%=LOCAL_STRINGS.mincharacters_first_name[language]%>',
      min_number: 2
    },
    max_characters: {
      error: '<%=LOCAL_STRINGS.maxcharacters_first_name[language]%>',
      max_number: 30
    }
  })
  const txtLastName = new SLInput('txtLastName', {
    messages: {
      msgDiv: 'msgLastName',
      show: showMsg,
      hide: hideMsg
    },
    required: '<%=LOCAL_STRINGS.required_last_name[language]%>',
    min_characters: {
      error: '<%=LOCAL_STRINGS.mincharacters_last_name[language]%>',
      min_number: 2
    },
    max_characters: {
      error: '<%=LOCAL_STRINGS.maxcharacters_last_name[language]%>',
      max_number: 30
    }
  })
  const icoUserName = document.getElementById('icoUserName');
  const spanShowUserName = document.getElementById('spanShowUserName');
  const txtUserName = new SLInput('txtUserName', {
    messages: {
      msgDiv: 'msgUserName',
      show: showMsg,
      hide: hideMsg
    },
    required: '<%=LOCAL_STRINGS.required_user_name[req.session.language]%>',
    min_characters: {
      error: '<%=LOCAL_STRINGS.mincharacters_user_name[req.session.language]%>',
      min_number: 8
    },
    max_characters: {
      error: '<%=LOCAL_STRINGS.maxcharacters_user_name[req.session.language]%>',
      max_number: 30
    }
  })
  txtUserName.BlurAction(() => {
    console.log('entro al blur action')
    return new Promise(async (resolve, reject) => {
      try {
        var sUserNameActual = hid_user_name.value;
        var sUserName = txtUserName.element.value;
        console.log('el valor del USER NAME:::' ,sUserName )
        spanShowUserName.innerHTML = sUserName;
        if ( sUserNameActual != sUserName ) {
          txtUserName.CustomErrorMessage('');
          if (txtUserName.IsValid()) {
            icoUserName.classList.remove('d-none');
            const oFetch = await fetch('/profile/is-existent-user-name', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                user_name: sUserName
              })
            });
            const oValue = await oFetch.json();
            if (oValue.payload.registered == true) {
              if (oValue.message.code == 'user_name_already_registered') {
                txtUserName.CustomErrorMessage(oValue.message['<%=req.session.language%>']);
              }
            }
            icoUserName.classList.add('d-none');
          }
        }
        resolve(sUserName);
      } catch (err) {
        reject(err);
      }
    });
  });
  const imgCountryFlag = document.getElementById('imgCountryFlag');
  const selNationality = new SLSelect('selNationality', {
    messages: {
      msgDiv: 'msgNationality',
      show: showMsg,
      hide: hideMsg
    },
    required: {
      error: '<%=LOCAL_STRINGS.required_country_of_residence[language]%>',
      reference_value: '-1,flag.svg'
    }
  });
  const asValueFlag = selNationality.element.value.split(',');
  console.log(asValueFlag);
  imgCountryFlag.src = `/profile/res/src/assets/img/flag/${asValueFlag[1]}`;
  selNationality.element.addEventListener('change', () => {
    const asNationality = selNationality.element.value.split(',');
    const sIdCountry = asNationality[0];
    const sFlag = asNationality[1];
    imgCountryFlag.src = `/profile/res/src/assets/img/flag/${sFlag}`;
  });
  const grpGender = new SLRadioGroup('grpGender', {
    messages: {
      msgDiv: 'msgGender',
      show: showMsg,
      hide: hideMsg
    },
    required: '<%=LOCAL_STRINGS.required_gender[language]%>'
  });
  const lblSingle = document.getElementById('lblSingle');
  const lblMarried = document.getElementById('lblMarried');
  const lblWidowed = document.getElementById('lblWidowed');
  const lblSeparated = document.getElementById('lblSeparated');
  const lblDivorced = document.getElementById('lblDivorced');
  if (grpGender.GetChecked() === 'female' && '<%=req.session.language%>' === 'es') {
    console.log('language', '<%=req.session.language%>')
    lblSingle.textContent = '<%=LOCAL_STRINGS.single_female[language]%>'
    lblMarried.textContent = '<%=LOCAL_STRINGS.married_female[language]%>'
    lblWidowed.textContent = '<%=LOCAL_STRINGS.widowed_female[language]%>'
    lblSeparated.textContent = '<%=LOCAL_STRINGS.separated_female[language]%>'
    lblDivorced.textContent = '<%=LOCAL_STRINGS.divorced_female[language]%>'
  }
  const radFemale = document.getElementById('radFemale');
  radFemale.addEventListener('click', () => {
    console.log('entro FEMALE')
    if ('<%=req.session.language%>' === 'es') {
      console.log('female', '<%=req.session.language%>')
      lblSingle.textContent = '<%=LOCAL_STRINGS.single_female[language]%>'
      lblMarried.textContent = '<%=LOCAL_STRINGS.married_female[language]%>'
      lblWidowed.textContent = '<%=LOCAL_STRINGS.widowed_female[language]%>'
      lblSeparated.textContent = '<%=LOCAL_STRINGS.separated_female[language]%>'
      lblDivorced.textContent = '<%=LOCAL_STRINGS.divorced_female[language]%>'
    }
  });
  const radMale = document.getElementById('radMale');
  radMale.addEventListener('click', () => {
    console.log('entro MALE')
    if ('<%=req.session.language%>' === 'es') {
      console.log('male', '<%=req.session.language%>')
      lblSingle.textContent = '<%=LOCAL_STRINGS.single[language]%>'
      lblMarried.textContent = '<%=LOCAL_STRINGS.married[language]%>'
      lblWidowed.textContent = '<%=LOCAL_STRINGS.widowed[language]%>'
      lblSeparated.textContent = '<%=LOCAL_STRINGS.separated[language]%>'
      lblDivorced.textContent = '<%=LOCAL_STRINGS.divorced[language]%>'
    }
  });
  if (radioMaritalStatus.GetChecked() === 'married') {
    div_married.classList.remove('d-none');
  }
  const radioSingle = document.getElementById('radioSingle');
  radioSingle.addEventListener('click', () => {
    console.log('--------------------- entro al radio single: debe desactivar la FECHA y el esposo y/o esposa')
    div_married.classList.add('d-none');
  });
  const radioMarried = document.getElementById('radioMarried');
  radioMarried.addEventListener('click', () => {
    console.log('+++++++++++++++++++++ entro al radio married: debe activar la FECHA y el esposo y/o esposa')
    div_married.classList.remove('d-none');
  });
  const txtDateOfBirth = new SLInput('txtDateOfBirth', {
    messages: {
      msgDiv: 'msgDateOfBirth',
      show: showMsg,
      hide: hideMsg
    },
    required: '<%=LOCAL_STRINGS.required_date_of_birth[language]%>',
    date: {
      error: '<%=LOCAL_STRINGS.date_of_birth_error[language]%>',
      format: '<%=req.session.date_format%>',
      separator: '<%=req.session.date_separator%>'
    },
    less_to_today: {
      error: '<%=LOCAL_STRINGS.date_of_birth_must_be_less_to_today[language]%>'
    }
  });
  txtDateOfBirth.BlurAction(() => {
    try {
      let sDateOfBirth = txtDateOfBirth.element.value;
      txtDateOfBirth.CustomErrorMessage('');
      let oDateOfBirth = txtDateOfBirth.GetDate();
      if (!oDateOfBirth.error) {
        sDateOfBirth = oDateOfBirth.date;
        const fDifference = SLTodaySimpleDifference(sDateOfBirth, 'to', '<%=req.session.date_format%>',
          '<%=req.session.date_separator%>', 'y', 'none');
        if (fDifference < 18.0) {
          txtDateOfBirth.CustomErrorMessage('<%=LOCAL_STRINGS.you_must_be_at_least_18_years_old[language]%>');
        } else if (fDifference >= 100.0) {
          txtDateOfBirth.CustomErrorMessage('<%=LOCAL_STRINGS.you_are_unlikely_older_100_years[language]%>');
        }
      }
    } catch (err) {
    }
    return txtDateOfBirth.element.value
  });
  const aoElements = [
    txtFirstName, txtLastName, grpGender, txtDateOfBirth, selNationality, radioMaritalStatus
  ];
  const frmMain = document.getElementById('frmMain')
  const icoUpdate = document.getElementById('icoUpdate')
  const btnUpdate = new SLButton('btnUpdate', {
  })
  btnUpdate.element.addEventListener('click', async () => {
    try {
      console.log('entro al btn update')
      if (radioMaritalStatus.GetChecked() === 'married') {
        aoElements.push(txtDateMarried);
      }
      var bValid = await SLAreValidElements(aoElements)
      console.log('valor del valid:',bValid )
      if (bValid) {
        icoUpdate.classList.remove('d-none')
        console.log('entro al bValid' )
        var oFormData = new FormData(frmMain)
        console.log('creo el objeto de la forma' )
        console.log('antes del fecth' )
        console.log(oFormData )
        const oFetch = await fetch('/profile/admin/personal-data', {
            method: 'PUT',
            body: oFormData
        })
        console.log('ya registro los datos desde el front end personal-data')
        let oValue = await oFetch.json();
        console.log('code:' + oValue.message.code)
        if (oValue.message.code == 'completed_operation') {
          Swal.fire({
            title: '<%=LOCAL_STRINGS.successful_registration[language]%>',
            text: '',
            icon: 'success',
            confirmButtonText: '<%=LOCAL_STRINGS.ok[language]%>',
            width: 'auto',
            allowOutsideClick: false,
            allowEscapeKey: false
          }).then((bAction) => {
            window.location.replace('/profile/admin/personal-data');
            return;
          });
        } else {
          Swal.fire({
            title: oValue.message['<%=language%>'],
            text: '',
            icon: 'error',
            confirmButtonText: '<%=LOCAL_STRINGS.ok[language]%>',
            width: 'auto',
            allowOutsideClick: false,
            allowEscapeKey: false
          }).then((bAction) => {
            icoUpdate.classList.add('d-none');
            return;
          });
        }
      }
    } catch(err) {
      console.error(err);
    }
  })
</script>
<!--  END *** SCRIPTS ***  -->
</body>
</html>
